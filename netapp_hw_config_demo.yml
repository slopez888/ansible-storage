---
 - hosts: netapp
   gather_facts: no
   vars:
     nodename: cloudcluster-01

   tasks:
     - name: Test 1 - Hardware Configuration Step 1.2 Run system node show
       raw: system node show {{ nodename }}
       register: system_node_show
     - debug:
         var: system_node_show.stdout_lines
     - set_fact:
        step1_2: "{{ system_node_show.stdout | regex_search('.*(Model:).*') }}"   
        step1_3: "{{ system_node_show.stdout | regex_search('.*(Serial Number:).*') }}"
     - debug: 
         var: step1_2
     - debug:
         var: step1_3
     - local_action: copy content={{ system_node_show.stdout_lines }} dest=/tmp/test1/1.2.txt

     - name: Test 1 - Hardware Configuration Step 1.4 Run license show
       raw: license show
       register: license_show
     - debug:
         var: license_show.stdout_lines
     - set_fact:
        step1_4: "{{ license_show.stdout | regex_search('.*(License).*') }}"
     - debug: 
         var: step1_4  
     - local_action: copy content={{ license_show.stdout_lines }} dest=/tmp/test1/1.4.txt

     - name: Test 1 - Hardware Configuration Step 1.5 Run node run <node> sysconfig -a
       raw: node run {{ nodename }} sysconfig -a
       register: node_run
     - debug:
         var: node_run.stdout_lines
     - set_fact:
        step1_5: "{{ node_run.stdout | regex_search('.*(Processors).*') }}" 
        step1_6: "{{ node_run.stdout | regex_search('.*(Memory Size).*') }}"
        step1_7: "{{ node_run.stdout | regex_search('.*(slot).*') }}"
        step1_8: "{{ node_run.stdout | regex_search('.*(DISK).*') }}"
        step1_9: "{{ node_run.stdout | regex_search('.*(PHA).*') }}"
     - debug: 
         var: step1_5
     - debug: 
         var: step1_6
     - debug: 
         var: step1_7
     - debug: 
         var: step1_8
     - debug: 
         var: step1_9
     - local_action: copy content={{ node_run.stdout_lines }} dest=/tmp/test1/1.5.txt

     - name: Test 1 - Hardware Configuration Step 1.6 Run disk show -owner <node name>
       raw: disk show -owner {{ nodename }} -fields rpm,shelf,type,usable-size,container-type
       register: disk_show
     - debug:
         var: disk_show.stdout_lines
     - set_fact:
        step1_10: "{{ disk_show.stdout | regex_search('.*(NET).*') }}" 
     - debug: 
         var: step1_10
     - local_action: copy content={{ disk_show.stdout_lines }} dest=/tmp/test1/1.6.txt 

     - name: Test 1 - Hardware Configuration Step 1.7 Run storage aggregate show-spare-disks -owner <node name>
       raw: storage aggregate show-spare-disks -owner {{ nodename }}
       register: storage_agg_show
     - debug:
         var: storage_agg_show.stdout_lines
     - set_fact:
        step1_11: "{{ storage_agg_show.stdout | regex_search('.*(DISK).*') }}" 
     - debug: 
         var: step1_11
     - local_action: copy content={{ storage_agg_show.stdout_lines }} dest=/tmp/test1/1.7.txt 

     - name: Test 1 - Hardware Configuration Step 1.8 Run network port show -node <node name> -role cluster
       raw: network port show -node {{ nodename }} -role cluster
       register: net_port_show
     - debug:
         var: net_port_show.stdout_lines
     - set_fact:
        step1_13: "{{ net_port_show.stdout | regex_search('.*(up).*') }}"
        step1_14: "{{ net_port_show.stdout | regex_search('(e0)') }}"  
        step1_15: "{{ net_port_show.stdout | regex_search('(?<=\\/).{4}') }}" 
     - debug: 
         var: step1_13
     - debug: 
         var: step1_14
     - debug: 
         var: step1_15
     - local_action: copy content={{ net_port_show.stdout_lines }} dest=/tmp/test1/1.8.txt

     - name: Test 1 - Hardware Configuration Step 1.9 Run network port ifgrp show -node <node name>
       raw: network port ifgrp show –node {{ nodename }} -ifgrp * -instance 
       register: net_port_ifgrp
     - debug:
         var: net_port_ifgrp.stdout_lines
     - set_fact:
        step1_16: "{{ net_port_ifgrp.stdout | regex_search('.*(entries).*') }}"
        step1_17: "{{ net_port_ifgrp.stdout | regex_search('.*(ao).*') }}"
        step1_18: "{{ net_port_ifgrp.stdout | regex_search('.*(Create Policy).*') }}" 
     - debug: 
         var: step1_16
     - debug: 
         var: step1_17
     - local_action: copy content={{ net_port_ifgrp.stdout_lines }} dest=/tmp/test1/1.9.txt 
     
     - name: Test 1 - Hardware Configuration Step 1.10 Run network port show -node <node name>
       raw: network port show –node {{ nodename }} -role data -link up -fields role,mtu,speed-admin,speed-oper
       register: net_port_show_n
     - debug:
         var: net_port_show_n.stdout_lines
     - set_fact:
        step1_19: "{{ net_port_show_n.stdout | regex_search('.*(1500).*') }}"
        step1_20: "{{ net_port_show_n.stdout | regex_search('(?<=\\/).{4}') }}"
        step1_21: "{{ net_port_show_n.stdout | regex_search('.*(entries).*') }}" 
     - debug: 
         var: step1_19
     - debug: 
         var: step1_20
     - debug: 
         var: step1_21
     - local_action: copy content={{ net_port_show_n.stdout_lines }} dest=/tmp/test1/1.10.txt 
         


